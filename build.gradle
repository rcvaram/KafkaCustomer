plugins {
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group = 'io.github.rcvaram'
version '1.0'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.kafka:spring-kafka:2.8.2'
    testImplementation 'org.springframework.kafka:spring-kafka-test:2.8.2'
}


java {
    withJavadocJar()
    withSourcesJar()
}

tasks.named('test') {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'io.github.rcvaram'
            artifactId = 'KafkaCustomer'
            version = '1.0'
            from components.java
            pom {
                name = 'KafkaCustomer'
                description = 'This is not a consumer for Kafka, It\'s a customer a for kafka who can get only specific message from kafka'
                url = 'https://github.com/rcvaram/KafkaCustomer'
                inceptionYear = '2022'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/liceneses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'rcvaram'
                        name = 'Sivaram Rasathurai'
                        email = 'cvaram96@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git:https://github.com/rcvaram/KafkaCustomer.git'
                    developerConnection = 'scm:git:ssh://github.com/rcvaram/KafkaCustomer.git'
                    url = 'https://github.com/rcvaram/KafkaCustomer'
                }

            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = project.properties["ossrhUsername"]
                password = project.properties["ossrhPassword"]
            }
        }
    }

}

signing {
    sign publishing.publications.mavenJava

}


javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}